@model AvibaWeb.ViewModels.CollectionViewModels.OfficeBalanceViewModel

<div class="col-md-12">
    <input hidden id="currentOfficeTotal" value="@Model.CurrentData.Total" />
    <input hidden id="currentOffice5kBill" value="@Model.CurrentData._5kBill" />
    <input hidden id="currentOffice2kBill" value="@Model.CurrentData._2kBill" />
    Всего в офисе: @Model.CurrentData.TotalStr<br />
    5000: @Model.CurrentData._5kBillStr<br />
    2000: @Model.CurrentData._2kBillStr<br />
    Остаток: @Model.CurrentData.BalanceStr<br />
    <button class="btn btn-success btn-xs saveHistoryConfirmBtn" data-toggle="confirmation"
            data-btn-ok-label="Продолжить" data-btn-ok-class="btn-success"
            data-btn-ok-icon-class="material-icons" data-btn-ok-icon-content="check"
            data-btn-cancel-label="Отмена" data-btn-cancel-class="btn-danger"
            data-btn-cancel-icon-class="material-icons" data-btn-cancel-icon-content="close"
            data-title="Сохранить" data-content="Сохранить данные?">
        <span class="glyphicon">Сохранить</span>
    </button>
</div>
<div class="col-md-12">
    <br />
</div>

<div class="col-md-12">
    Выбрать с: <input type="text" autocomplete="off" id="min" name="min" class="date-range-filter"> по: <input type="text" autocomplete="off" id="max" name="max" class="date-range-filter">
    <a href="/" id="getHistoryListBtn" class="btn btn-success">Показать</a>
</div>

<table class="table table-striped table-bordered bootstrap-datatable datatable" id="dataTable">
    <thead>
        <tr>
            <th>Дата</th>
            <th>Всего в офисе</th>
            <th>5000</th>
            <th>2000</th>
            <th>Остаток</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Records.Any())
        {
        <tr>
            <td colspan="5" class="text-center">Нет записей</td>
            <td style="display: none;"></td>
            <td style="display: none;"></td>
            <td style="display: none;"></td>
            <td style="display: none;"></td>
        </tr>
        }
        else
        {
            foreach (var record in Model.Records)
            {
        <tr>
            <td>
                <span id="myId">@record.SaveDateTime</span>
            </td>
            <td>
                <span>@record.TotalStr</span>
            </td>
            <td>
                <span>@record._5kBillStr</span>
            </td>
            <td>
                <span>@record._2kBillStr</span>
            </td>
            <td>
                <span>@record.BalanceStr</span>
            </td>
        </tr>
            }
        }
    </tbody>
</table>

<script>
    $("#getHistoryListBtn").click(function (e) {
        const sendJsonData = {
            fromDate: moment($('#min').val(), "DD.MM.YYYY").toISOString(true),
            toDate: moment($('#max').val(), "DD.MM.YYYY").toISOString(true)
        };

        e.preventDefault();
        $.ajax({
            url: "/Collection/OfficeBalance",
            type: "GET",
            cache: false,
            data: sendJsonData,
            success: function (result) {
                $("#results").html(result);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });

    $(function() {
        $("#min").datepicker({
                    locale: 'ru-ru',
                    uiLibrary: 'bootstrap',
                    format: 'dd.mm.yyyy'
                });
        $("#max").datepicker({
                    locale: 'ru-ru',
                    uiLibrary: 'bootstrap',
                    format: 'dd.mm.yyyy'
                });

        $("#min").val('@Model.FromDate');
        $("#max").val('@Model.ToDate');

        $("#getReceiptListBtn").trigger("click");

    var oTable = $('#dataTable').dataTable({
            "iDisplayLength": 100,
            "aLengthMenu": [[10, 20, 50, 100, -1], [10, 20, 50, 100, "все"]],
            "bStateSave": false,
            "sPaginationType": "full_numbers",
            "bSort": false,
            "aaSorting": [[0, "desc"]],
            "columnDefs": [{
                "defaultContent": "-",
                "targets": "_all"
            }],
            "oLanguage": {
                "sSearch": "Поиск:",
                "sLengthMenu": "Показать _MENU_ записей",
                "sInfo": "Записи с _START_ до _END_ из _TOTAL_ записей",
                "sInfoEmpty": "Записи с 0 до 0 из 0 записей",
                "sInfoFiltered": "(отфильтровано из _MAX_ записей)",
                "oPaginate": {
                    "sFirst": 'Первая',
                    "sPrevious": 'Предыдущая',
                    "sNext": 'Следующая',
                    "sLast": 'Последняя'
                },
                "oaria": {
                    "ipaginate": {
                        "nfirst": 'Начало',
                        "nprevious": 'Previous',
                        "nnext": 'Next',
                        "nlast": 'Last'
                    }
                }
            }
        });
    });
</script>