@using AvibaWeb.DomainModels
@using AvibaWeb.ViewModels.CollectionViewModels
@model CollectionDatatableViewModel

@{
    ViewBag.Title = "Выданные";
}
<div class="row">
    <!-- CONTENT START -->
    <div class="col-md-12">
        Выбрать с: <input type="text" autocomplete="off" id="min" name="min" class="date-range-filter">
        по: <input type="text" autocomplete="off" id="max" name="max" class="date-range-filter">
        <button id="showResults" class="btn btn-primary">Показать</button>
    </div>

    <div class="box col-md-12">
        <div class="box-inner">
            <div class="box-header well" data-original-title="">
                <h2>Переданные инкассации</h2>
            </div>
            <table class="table table-striped table-bordered bootstrap-datatable datatable" id="dataTable">
                <thead>
                    <tr>
                        <th>Дата</th>
                        @if (User.IsInRole("Administrators"))
                        {
                            <th>Поставщик</th>
                        }
                        <th>Получатель</th>
                        <th>Сумма</th>
                        <th>Тип оплаты</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model.Items.Any())
                    {
                        <tr>
                            @if (User.IsInRole("Administrators"))
                            {
                                <td colspan="5" class="text-center">Нет операций</td>
                                <td style="display: none;"></td>
                            }
                            else
                            {
                                <td colspan="4" class="text-center">Нет операций</td>
                            }
                            <td style="display: none;"></td>
                            <td style="display: none;"></td>
                            <td style="display: none;"></td>
                        </tr>
                    }
                    else
                    {
                        foreach (var collection in Model.Items)
                        {
                            <tr>
                                <td style="width: 100px;">
                                    <span id="myId">@collection.IssuedDateTime</span>
                                    <br />
                                    @switch (collection.Status)
                                    {
                                        case CollectionOperationType.COType.New:
                                            <span class="label-warning label label-default">Ожидание</span>
                                            break;
                                        case CollectionOperationType.COType.Accepted:
                                            <span class="label-success label label-default">Получено</span>
                                            break;
                                        case CollectionOperationType.COType.Rejected:
                                            <span class="label-default label label-danger">Отказ</span>
                                            break;
                                    }
                                </td>
                                @if (User.IsInRole("Administrators"))
                                {
                                    <td>
                                        <span>@collection.ProviderName</span>
                                        <br />
                                        <b>@collection.DeskName</b>
                                        <br />
                                        <span><i style="background-color: #E1F896;">@collection.Comment</i></span>
                                    </td>
                                }

                                <td style="width: 200px;">
                                    <span>@collection.CollectorName</span>
                                </td>
                                <td>
                                    <span><b>@collection.Amount</b></span>
                                </td>
                                <td style="width: 150px;">
                                    @switch (collection.PaymentType)
                                    {
                                        case AvibaWeb.DomainModels.PaymentTypes.Cash:
                                            <span>Наличные</span>
                                            break;

                                        case AvibaWeb.DomainModels.PaymentTypes.Cashless:
                                            <span>Безналичный расчет</span>
                                            break;
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    $(function () {
        var oTable = $('#dataTable').dataTable({
                                        "iDisplayLength": 100,
            "aLengthMenu": [[10, 20, 50, 100, -1], [10, 20, 50, 100, "все"]],
            "bStateSave": false,
            "sPaginationType": "full_numbers",
            "bSort": false,
            "aaSorting": [[0, "desc"]],
            "columnDefs": [{
                "defaultContent": "-",
                "targets": "_all"
            }],
            "oLanguage": {
                "sSearch": "Поиск:",
                "sLengthMenu": "Показать _MENU_ записей",
                "sInfo": "Записи с _START_ до _END_ из _TOTAL_ записей",
                "sInfoEmpty": "Записи с 0 до 0 из 0 записей",
                "sInfoFiltered": "(отфильтровано из _MAX_ записей)",
                "oPaginate": {
                    "sFirst": 'Первая',
                    "sPrevious": 'Предыдущая',
                    "sNext": 'Следующая',
                    "sLast": 'Последняя'
                },
                "oaria": {
                    "ipaginate": {
                        "nfirst": 'Начало',
                        "nprevious": 'Previous',
                        "nnext": 'Next',
                        "nlast": 'Last'
                    }
                }
            }
        });

        $(".datePicker").datepicker({
            autoclose: true,
        });

        $("#min").datepicker();
        $("#max").datepicker();

        $("#min").datepicker('setDate','@Model.FromDate');
        $("#max").datepicker('setDate','@Model.ToDate');
    });

    $("#showResults").click(function (e) {
        e.preventDefault();

        const sendJsonData = {
            isAdmin: @Model.IsAdmin,
            fromDate: moment($('#min').val(), "DD.MM.YYYY").toISOString(true),
            toDate: moment($('#max').val(), "DD.MM.YYYY").toISOString(true)
        };

        $.ajax({
            url: "/Collection/IssuedCollections",
            type: "GET",
            cache: false,
            data: sendJsonData,
            success: function (result) {
                $("#results").html(result);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });
</script>