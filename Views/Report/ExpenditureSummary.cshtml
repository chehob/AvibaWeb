@using AvibaWeb.DomainModels
@using AvibaWeb.ViewModels.ReportViewModels
@model ExpenditureSummaryViewModel

<div class="box col-md-10">
    <div class="row">
        <div class="col-md-12">
            Выбрать с: <input type="text" autocomplete="off" id="min" name="min" class="date-range-filter"> по: <input type="text" autocomplete="off" id="max" name="max" class="date-range-filter">
            <button id="groupByDeskGroup" class="btn btn-primary">По подразделению</button>
            <button id="groupByObject" class="btn btn-primary">По статье расходов</button>
        </div>

        <div class="box col-md-12">
            <div class="box-inner">
                <div class="box-header well" data-original-title="">
                    <h2>Итого: @Model.Amount (Нал: @Model.AmountCash, Безнал: @Model.AmountCashless)</h2>
                </div>
                <div class="box-content">
                    <table class="table table-striped table-bordered bootstrap-datatable datatable" id="dataTable">
                        <thead>
                            <tr>
                                <th>Наименование</th>
                                <th>Сумма</th>
                                <th>Сумма нал</th>
                                <th>Сумма безнал</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.ItemGroups.Any())
                            {
                                <tr>
                                    <td colspan="4" class="text-center">Нет операций</td>
                                    <td style="display: none;"></td>
                                    <td style="display: none;"></td>
                                    <td style="display: none;"></td>
                                </tr>
                            }
                            else
                            {
                                foreach (var itemGroup in Model.ItemGroups)
                                {
                                    <tr>
                                        <td class="text-center">
                                            <div style="min-height: 32px;">@itemGroup.Name</div>
                                        </td>
                                        <td>
                                            <b>@itemGroup.AmountStr</b>
                                        </td>
                                        <td>
                                            @itemGroup.AmountCashStr
                                        </td>
                                        <td>
                                            @itemGroup.AmountCashlessStr
                                        </td>
                                    </tr>
                                    foreach (var item in itemGroup.Items)
                                    {
                                        <tr>
                                            <td>
                                                <span class="showOperationsBtn btn-setting">@item.Name</span>
                                                <input hidden class="deskGroupId" value="@item.DeskGroupId" />
                                                <input hidden class="objectId" value="@item.ObjectId" />
                                            </td>
                                            <td>
                                                <b>@item.Amount</b>
                                            </td>
                                            <td>
                                                @item.AmountCashStr
                                            </td>
                                            <td>
                                                @item.AmountCashlessStr
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="modal fade" id="dialog" title="Basic dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <span>Операции</span>
                        <button type="button" class="close" data-dismiss="modal">×</button>
                    </div>
                    <div class="modal-body"></div>
                    <div class="modal-footer"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        var oTable = $('#dataTable').dataTable({
                    "sPaginationType": "full_numbers",
            "bSort": false,
            "bPaginate": false,
            "bInfo": false,
            "bFilter": false,
            "oLanguage": {
                        "sSearch": "Поиск:",
                "sLengthMenu": "Показать _MENU_ записей",
                "sInfo": "Записи с _START_ до _END_ из _TOTAL_ записей",
                "sInfoEmpty": "Записи с 0 до 0 из 0 записей",
                "sInfoFiltered": "(отфильтровано из _MAX_ записей)",
                "oPaginate": {
                            "sFirst":    'Первая',
                    "sPrevious": 'Предыдущая',
                    "sNext":     'Следующая',
                    "sLast":     'Последняя'
                },
                "oaria": {
                            "ipaginate": {
                                "nfirst":    'Начало',
                        "nprevious": 'Previous',
                        "nnext":     'Next',
                        "nlast":     'Last'
                    }
                        }
                    }
                });

        $("#min").datepicker();
        $("#max").datepicker();

        $("#min").val('@Model.FromDate');
        $("#max").val('@Model.ToDate');
    });

    $("#groupByDeskGroup").click(function (e) {
        const sendJsonData = {
            grouping: 2,
            fromDate: moment($('#min').val(), "DD.MM.YYYY").toISOString(true),
            toDate: moment($('#max').val(), "DD.MM.YYYY").toISOString(true)
        };

        e.preventDefault();
        $.ajax({
            url: "/Report/ExpenditureSummary",
            type: "GET",
            cache: false,
            data: sendJsonData,
            success: function (result) {
                $("#results").html(result);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });

    $("#groupByObject").click(function (e) {
        const sendJsonData = {
            grouping: 1,
            fromDate: moment($('#min').val(), "DD.MM.YYYY").toISOString(true),
            toDate: moment($('#max').val(), "DD.MM.YYYY").toISOString(true)
        };

        e.preventDefault();
        $.ajax({
            url: "/Report/ExpenditureSummary",
            type: "GET",
            cache: false,
            data: sendJsonData,
            success: function (result) {
                $("#results").html(result);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });

    $(".showOperationsBtn").click(function (e) {
        e.preventDefault();

        const sendJsonData = {
            deskGroupId: $(this).siblings(".deskGroupId")[0].value,
            objectId: $(this).siblings(".objectId")[0].value,
            fromDate: moment($('#min').val(), "DD.MM.YYYY").toISOString(true),
            toDate: moment($('#max').val(), "DD.MM.YYYY").toISOString(true)
        };

        $.ajax({
            url: "/Report/ExpenditureSummaryOperations",
            type: "GET",
            cache: false,
            data: sendJsonData,
            success: function (result) {
                $(".modal-body").html(result);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });
</script>
