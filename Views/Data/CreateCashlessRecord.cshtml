@using AvibaWeb.ViewModels.DataViewModels
@model CreateCashlessRecordViewModel


    <!-- CONTENT START -->
    <div class="box col-md-12">
        <div class="box-inner">
            <div class="box-header well" data-original-title="">
                <h2>Создание платежного поручения</h2>
            </div>
            <div class="box-content">
    <div class="row">
        <div class="col-md-12">
        <input autocomplete="off" placeholder="Номер п/п" class="form-control" id="recordOrderNumber" asp-for="OrderNumber" />
        </div></div>
 <br>                   
        <div class="row">
            <div class="col-md-12">        
        <select  data-placeholder="Выбрать плательщика" id="selectPayer" data-rel="chosen">
            <option value=""></option>
            <optgroup label="Контрагенты">
                @foreach (var counterparty in Model.Counterparties)
                {
                    <option>@counterparty</option>
                }
            </optgroup>
            <optgroup label="Организации">
                @foreach (var org in Model.Organizations)
                {
                    <option>@org</option>
                }
            </optgroup>
        </select>
        <div id="payerOrgFinancialAccountsDiv"></div>
         </div>
        
        </div>   
<br>
<div class="row">
                <div class="col-md-12">        
        <select data-placeholder="Выбрать получателя" id="selectPayee" data-rel="chosen">
            <option value=""></option>
            <optgroup label="Контрагенты">
                @foreach (var counterparty in Model.Counterparties)
                {
                    <option>@counterparty</option>
                }
            </optgroup>
            <optgroup label="Организации">
                @foreach (var org in Model.Organizations)
                {
                    <option>@org</option>
                }
            </optgroup>
        </select>
        <div id="payeeOrgFinancialAccountsDiv"></div>
                </div></div>
<br>
    <div class="row">
        <div class="col-md-12">
        <input autocomplete="off" placeholder="Сумма" class="form-control" id="recordAmount" asp-for="Amount" value="" />
    </div></div>
<br>    
    <div class="row">
        <div class="col-md-12">
        <input autocomplete="off" placeholder="Комментарий" class="form-control" id="recordDescription" asp-for="Description" />
    </div></div>
<br>   
    <div class="row">
        <div class="col-md-12">
        <a href="/" id="sendDataBtn" class="btn btn-success">Сохранить</a>
        <a class="btn btn-primary btn-setting" href="#" id="createCounterpartyBtn"><i class="glyphicon glyphicon-plus"></i> Новая фирма</a>
        </div>
    </div>
</div></div></div>

<div class="modal fade" id="dialog" title="Basic dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <span>Новая фирма</span>
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body"></div>
            <div class="modal-footer"></div>
        </div>
    </div>
</div>

<script>
    onload = function () {
        $('[data-rel="chosen"],[rel="chosen"]').chosen({ width: "100%", search_contains: true });

        // Select the node that will be observed for mutations
        var payerTargetNode = $("#selectPayer").next().find("a.chosen-single span")[0];

        // Options for the observer (which mutations to observe)
        var config = { attributes: true, childList: true, subtree: true };

        // Callback function to execute when mutations are observed
        var payerCallback = function (mutationsList, observer) {
            var mutation = mutationsList[0]
            $.ajax({
                url: "/Data/OrganizationFinancialAccounts",
                type: "GET",
                cache: false,
                data: { orgName: mutation.target.textContent },
                success: function (result) {
                    $("#payerOrgFinancialAccountsDiv").html(result);
                    $('[data-rel="chosen"],[rel="chosen"]').chosen({ width: "100%", search_contains: true });
                },
                error: function (error) {
                    $("#payerOrgFinancialAccountsDiv").html();
                }
            });
        };

        // Create an observer instance linked to the callback function
        var payerObserver = new MutationObserver(payerCallback);

        // Start observing the target node for configured mutations
        payerObserver.observe(payerTargetNode, config);

        // Select the node that will be observed for mutations
        var payeeTargetNode = $("#selectPayee").next().find("a.chosen-single span")[0];

        // Callback function to execute when mutations are observed
        var payeeCallback = function (mutationsList, observer) {
            var mutation = mutationsList[0]
            $.ajax({
                url: "/Data/OrganizationFinancialAccounts",
                type: "GET",
                cache: false,
                data: { orgName: mutation.target.textContent },
                success: function (result) {
                    $("#payeeOrgFinancialAccountsDiv").html(result);
                    $('[data-rel="chosen"],[rel="chosen"]').chosen({ width: "100%", search_contains: true });
                },
                error: function (error) {
                    $("#payeeOrgFinancialAccountsDiv").html();
                }
            });
        };

        // Create an observer instance linked to the callback function
        var payeeObserver = new MutationObserver(payeeCallback);

        // Start observing the target node for configured mutations
        payeeObserver.observe(payeeTargetNode, config);
    }

    onload();

    $("#sendDataBtn").click(function (e) {
        var sendJsonData = {
            PayerName: $("#selectPayer").next().find("a.chosen-single span").first().html(),
            PayerBankName: $("#payerOrgFinancialAccountsDiv > div").find("a.chosen-single span").first().html(),
            PayeeName: $("#selectPayee").next().find("a.chosen-single span").first().html(),
            PayeeBankName: $("#payeeOrgFinancialAccountsDiv > div").find("a.chosen-single span").first().html(),
            Amount: $("#recordAmount").val(),
            Description: $("#recordDescription").val(),
            OrderNumber: $("#recordOrderNumber").val()
        };

        e.preventDefault();
        $.ajax({
            url: "/Data/CreateCashlessRecord",
            type: "POST",
            cache: false,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(sendJsonData),
            success: function (result) {
                console.log('y');
                $("#contentResults").html(result.message);
            },
            error: function (error) {
                console.log(error.message);
            }
        });
    });

    $("#createCounterpartyBtn").click(function (e) {
        e.preventDefault();
        $.ajax({
            url: "/Data/CreateCounterparty",
            type: "GET",
            cache: false,
            success: function (result) {
                $(".modal-body").html(result);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });
</script>
