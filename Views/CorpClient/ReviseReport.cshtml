@using AvibaWeb.ViewModels.CorpClientViewModels
@model ReviseReportViewModel

<div class="box col-md-12">
    <div class="box-inner">
        <div class="box-header well" data-original-title="">
            <h2>Создание акта сверки</h2>
        </div>
        <div class="box-content">
            <div class="row">
                <div class="col-md-6">
                    <h5>Организация:</h5>
                    <div id="payeeSelectDiv">
                        <select data-placeholder="Выбрать организацию" id="selectPayee" data-rel="chosen">
                            <option value=""></option>
                            <optgroup label="Организации">
                                @foreach (var org in Model.Organizations)
                                {
                                    <option id=@org.Key>@org.Value</option>
                                }
                            </optgroup>
                        </select>
                    </div>
                    <div id="payeeOrgFinancialAccountsDiv"></div>
                </div>

                <div class="col-md-6">
                    <h5>Корпоратор:</h5>
                    <div id="payerSelectDiv">
                        <select data-placeholder="Выбрать корпоратора" id="selectPayer" data-rel="chosen">
                            <option value=""></option>
                            <optgroup label="Корпораторы">
                                @foreach (var counterparty in Model.Counterparties)
                                {
                                    <option id=@counterparty.Key>@counterparty.Value</option>
                                }
                            </optgroup>
                        </select>
                    </div>
                    <div id="payeeOrgFinancialAccountsDiv"></div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <button id="resetOrgDataBtn" class="btn btn-success">Сбросить</button>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    За период с: <input type="text" autocomplete="off" id="min" name="min" class="date-range-filter"> по: <input type="text" autocomplete="off" id="max" name="max" class="date-range-filter">
                    <a href="/" id="createReviseReportBtn" class="btn btn-success">Создать акт</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        initChosen();

        $("#min").datepicker();
        $("#max").datepicker();

        $("#min").val(moment().subtract(30, 'days').format("DD.MM.YYYY"));
        $("#max").val(moment().format("DD.MM.YYYY"));
    });

    $("#createReviseReportBtn").click(function (e) {
        var selectedPayeeId = $("#selectPayee").find('option:selected').map(function () {
            return $(this).prop('id')
        }).get();

        const sendJsonData = {
            fromDate: moment($('#min').val(), "DD.MM.YYYY").toISOString(true),
            toDate: moment($('#max').val(), "DD.MM.YYYY").toISOString(true),
            payerId: $("#selectPayer").find('option:selected').prop('id'),
            payerName: $("#selectPayer").find('option:selected').text(),
            payeeId: $("#selectPayee").find('option:selected').prop('id'),
            payeeName: $("#selectPayee").find('option:selected').text(),
            payeeBankName: $("#payeeOrgFinancialAccountsDiv > div").find("a.chosen-single span").first().html()
        };

        console.log(sendJsonData);

        e.preventDefault();
        $.ajax({
            url: "/CorpClient/ReviseReport",
            type: "POST",
            cache: false,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(sendJsonData),
            success: function (result) {
                console.log(result);

                const bodyData = [];

                var headerRow = [];

                headerRow.push({ text: `По данным ${result.orgName}, руб`, colSpan: 4 });
                headerRow.push({});
                headerRow.push({});
                headerRow.push({});
                headerRow.push({ text: `По данным ${result.payerName}, руб`, colSpan: 4 });
                headerRow.push({});
                headerRow.push({});
                headerRow.push({});

                bodyData.push(headerRow);

                headerRow = [];

                headerRow.push({ text: 'Дата', alignment: 'center' });
                headerRow.push({ text: 'Документ', alignment: 'center' });
                headerRow.push({ text: 'Дебет', alignment: 'center' });
                headerRow.push({ text: 'Кредит', alignment: 'center' });
                headerRow.push({ text: 'Дата', alignment: 'center' });
                headerRow.push({ text: 'Документ', alignment: 'center' });
                headerRow.push({ text: 'Дебет', alignment: 'center' });
                headerRow.push({ text: 'Кредит', alignment: 'center' });

                bodyData.push(headerRow);

                var dataRow = [];

                dataRow.push({ text: 'Сальдо начальное', colSpan: 2 });
                dataRow.push({});
                dataRow.push({ text: result.oldDebit, alignment: 'right' });
                dataRow.push({ text: result.oldCredit, alignment: 'right' });
                dataRow.push({ text: 'Сальдо начальное', colSpan: 2 });
                dataRow.push({});
                dataRow.push({});
                dataRow.push({});

                bodyData.push(dataRow);

                result.items.forEach(function (item) {
                    dataRow = [];

                    dataRow.push({ text: item.dateStr });
                    dataRow.push({ text: item.label });
                    dataRow.push({ text: item.debitStr, alignment: 'right' });
                    dataRow.push({ text: item.creditStr, alignment: 'right' });
                    dataRow.push({});
                    dataRow.push({});
                    dataRow.push({});
                    dataRow.push({});

                    bodyData.push(dataRow);
                });

                dataRow = [];

                dataRow.push({ text: 'Обороты за период', colSpan: 2 });
                dataRow.push({});
                dataRow.push({ text: result.debit, alignment: 'right' });
                dataRow.push({ text: result.credit, alignment: 'right' });
                dataRow.push({ text: 'Обороты за период', colSpan: 2 });
                dataRow.push({});
                dataRow.push({});
                dataRow.push({});

                bodyData.push(dataRow);

                dataRow = [];

                dataRow.push({ text: 'Сальдо конечное', colSpan: 2 });
                dataRow.push({});
                dataRow.push({ text: result.newDebit, alignment: 'right' });
                dataRow.push({ text: result.newCredit, alignment: 'right' });
                dataRow.push({ text: 'Сальдо конечное', colSpan: 2 });
                dataRow.push({});
                dataRow.push({});
                dataRow.push({});

                bodyData.push(dataRow);

                const docDefinition = {
                    pageMargins: [ 15, 50, 0, 0 ],

                    content: [
                        {
                            text: 'Акт сверки',
                            style: 'largerText',
                            alignment: 'center',
                            bold: true,
                            margin: [0, 0, 0, 2]
                        },
                        {
                            text: `взаимных расчетов за период ${result.fromDate} - ${result.toDate}`,
                            style: 'normalText',
                            alignment: 'center',
                            margin: [0, 0, 0, 2]
                        },
                        {
                            text: `между ${result.orgName}`,
                            style: 'normalText',
                            alignment: 'center',
                            margin: [0, 0, 0, 2]
                        },
                        {
                            text: `и ${result.payerName}`,
                            style: 'normalText',
                            alignment: 'center',
                            margin: [0, 0, 0, 2]
                        },
                        {
                            text: 'по договору Основной договор',
                            style: 'normalText',
                            alignment: 'center',
                            margin: [0, 0, 0, 15]
                        },
                        {
                            text: `Мы, нижеподписавшиеся, ________________ ${result.orgName} _______________, с одной стороны,`,
                            style: 'normalText',
                            margin: [0, 0, 0, 3]
                        },
                        {
                            text: `и ________________ ${result.payerName} _______________, с другой стороны,`,
                            style: 'normalText',
                            margin: [0, 0, 0, 3]
                        },
                        {
                            text: 'составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:',
                            style: 'normalText'
                        },
                        {
                            table: {
                                headerRows: 2,
                                widths: [38, 120, 45, 45, 38, 120, 45, 45],
                                body: bodyData
                            },
                            style: 'smallText',
                            margin: [0, 15, 0, 20]
                        },
                        {
                            text: `По данным ${result.orgName}`,
                            style: 'normalText'
                        },
                        {
                            text: `На ${result.toDate} задолженность в пользу ${result.balance >= 0 ? result.orgName : result.payerName} составляет ${result.balance >= 0 ? result.newDebit : result.newCredit}`,
                            style: 'normalText',
                            margin: [0, 0, 0, 20]
                        },
                        {
                            columns: [
                                [
                                    {
                                        text: `От ${result.orgName}`,
                                        margin: [0, 0, 0, 15]
                                    },
                                    {
                                        text: '________________________________(__________________)'
                                    },
                                    {
                                        text: 'М.П.'
                                    }
                                ],
                                [
                                    {
                                        text: `От ${result.payerName}`,
                                        margin: [10, 0, 0, 15]
                                    },
                                    {
                                        text: '________________________________(__________________)',
                                        margin: [10, 0, 0, 0]
                                    },
                                    {
                                        text: 'М.П.',
                                        margin: [10, 0, 0, 0]
                                    }
                                ]
                            ],
                            style: 'normalText'
                        }
                    ],

                    styles: {
                        largerText: {
                            fontSize: 10,
                        },
                        normalText: {
                            fontSize: 8
                        },
                        smallText: {
                            fontSize: 7
                        },
                        tableHeader: {
                            bold: true,
                            fontSize: 10,
                            alignment: 'center'
                        }
                    }
                };

                pdfMake.createPdf(docDefinition).open();
            },
            error: function (error) {
                console.log(error);
            }
        });
    });
</script>