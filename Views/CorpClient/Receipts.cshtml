@using AvibaWeb.ViewModels.CorpClientViewModels
@model ReceiptsViewModel

@if (User.IsInRole("Administrators") || User.IsInRole("Офис"))
{
<div class="box-content">
    <div class="row">
        <style>
            .popup {
                position: fixed;
                top: 150px;
                right: 0;
                padding: 10px;
                text-align: center;
                background-color: #eee;
                border: 1px solid #ccc;
                z-index: 1;
            }
        </style>
        <div class="popup" id="sumPopup" style="display:none;">
            <span>Кол-во авиабилетов:</span>
            <span id="segTotal"></span><br>
            <span>Кол-во ж/д билетов:</span>
            <span id="feeTotal"></span><br>
            <span>Кол-во доп. услуг:</span>
            <span id="feeTotal"></span><br>
            <span>Сумма авиабилетов:</span>
            <span id="ticketTotal"></span><br>
            <span>Сумма ж/д билетов:</span>
            <span id="ticketTotal"></span><br>
            <span>Сумма доп. услуг:</span>
            <span id="ticketTotal"></span><br>
            <label class="red">Сумма сборов:</label>
            <b><span class="red" id="finalTotal"></span></b><br>
            <span>Сборы авиабилетов:</span>
            <span id="ticketTotal"></span><br>
            <span>Сборы ж/д билетов:</span>
            <span id="ticketTotal"></span><br>
            <span>Сборы доп. услуг:</span>
            <span id="ticketTotal"></span><br>
        </div>
        <div class="popup" style="top: 109px;" id="toggleSumPopupBtn">
            <span>Показать суммы</span>
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-md-6">
            <h5>Организация:</h5>
            <div id="payeeSelectDiv">
                <select data-placeholder="Выбрать организацию" id="selectPayee" data-rel="chosen">
                    <option value=""></option>
                    <optgroup label="Организации">
                        @foreach (var org in Model.Organizations)
                        {
                            <option id=@org.Key>@org.Value</option>
                        }
                    </optgroup>
                </select>
            </div>
        </div>

        <div class="col-md-6">
            <h5>Корпоратор:</h5>
            <div id="payerSelectDiv">
                <select data-placeholder="Выбрать корпоратора" id="selectPayer" data-rel="chosen">
                    <option value=""></option>
                    <optgroup label="Корпораторы">
                        @foreach (var counterparty in Model.Counterparties)
                        {
                            <option id=@counterparty.Key>@counterparty.Value</option>
                        }
                    </optgroup>
                </select>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6">
            <button id="resetOrgDataBtn" class="btn btn-success">Сбросить</button>
            <input hidden id="withBanks" value="false" />
            <input hidden id="withFees" value="false" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6">
            <label for="isOnlyPaid">Только оплаченные</label>
            <input id="isOnlyPaid" type="checkbox" />
        </div>
    </div>
</div>
}

<div class="col-md-12">
    Выбрать с: <input type="text" autocomplete="off" id="min" name="min" class="date-range-filter"> по: <input type="text" autocomplete="off" id="max" name="max" class="date-range-filter">
    <a href="/" id="getReceiptListBtn" class="btn btn-success">Список счетов</a>
</div>

<div class="col-md-12" id="receiptListBlock">
</div>

<script>
    $("#getReceiptListBtn").click(function (e) {
        const sendJsonData = {
            payerId: $("#selectPayer").find('option:selected').prop('id'),
            payeeId: $("#selectPayee").find('option:selected').prop('id'),
            isOnlyPaid: $("#isOnlyPaid").prop('checked'), 
            fromDate: moment($('#min').val(), "DD.MM.YYYY").toISOString(true),
            toDate: moment($('#max').val(), "DD.MM.YYYY").toISOString(true)
        };

        e.preventDefault();
        $.ajax({
            url: "/CorpClient/ReceiptList",
            type: "POST",
            cache: false,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(sendJsonData),
            success: function (result) {
                $("#receiptListBlock").html(result.message);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });

    $(function () {
        initChosen(false, false);

        $("#min").datepicker();
        $("#max").datepicker();

        $("#min").val(moment().subtract(30, 'days').format("DD.MM.YYYY"));
        $("#max").val(moment().format("DD.MM.YYYY"));

        $("#getReceiptListBtn").trigger("click");
    });
</script>